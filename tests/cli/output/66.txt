log_rule(Newline): rule is 'nl_max' at line 697
log_rule(Newline): rule is 'cmt_insert_file_header' at line 1190
log_rule(Newline): rule is 'cmt_insert_file_footer' at line 1198
log_rule(Newline): rule is 'cmt_insert_func_header' at line 1205
log_rule(Newline): rule is 'cmt_insert_class_header' at line 1212
log_rule(Newline): rule is 'cmt_insert_oc_msg_header' at line 1219
log_rule(Newline): rule is 'utf8_force' at line 1863
log_rule(Newline): rule is 'utf8_byte' at line 1864
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'enable_digraphs' at line 63
log_rule(Newline): rule is 'newlines' at line 2500
log_rule(Newline): rule is 'mod_enum_last_comma' at line 24
log_rule(Newline): rule is 'mod_full_brace_if_chain' at line 204
log_rule(Newline): rule is 'mod_full_brace_if_chain_only' at line 205
log_rule(Newline): rule is 'mod_full_brace_if' at line 212
log_rule(Newline): rule is 'mod_full_brace_do' at line 213
log_rule(Newline): rule is 'mod_full_brace_for' at line 214
log_rule(Newline): rule is 'mod_full_brace_using' at line 215
log_rule(Newline): rule is 'mod_full_brace_while' at line 216
log_rule(Newline): rule is 'mod_full_brace_if' at line 227
log_rule(Newline): rule is 'mod_full_brace_do' at line 228
log_rule(Newline): rule is 'mod_full_brace_for' at line 229
log_rule(Newline): rule is 'mod_full_brace_function' at line 230
log_rule(Newline): rule is 'mod_full_brace_using' at line 231
log_rule(Newline): rule is 'mod_full_brace_while' at line 232
log_rule(Newline): rule is 'mod_case_brace' at line 243
log_rule(Newline): rule is 'mod_move_case_break' at line 249
log_rule(Newline): rule is 'mod_remove_extra_semicolon' at line 1956
log_rule(Newline): rule is 'mod_remove_empty_return' at line 1963
log_rule(Newline): rule is 'mod_full_paren_if_bool' at line 53
log_rule(Newline): rule is 'nl_remove_extra_newlines' at line 1976
log_rule(Newline): rule is 'nl_struct_brace' at line 4109
log_rule(Newline): rule is 'nl_define_macro' at line 1593
log_rule(Newline): rule is 'nl_ds_struct_enum_cmt' at line 3666
log_rule(Newline): rule is 'nl_brace_brace' at line 3749
log_rule(Newline): rule is 'nl_type_brace_init_lst_open' at line 3829
log_rule(Newline): rule is 'nl_type_brace_init_lst_close' at line 3830
log_rule(Newline): rule is 'nl_define_macro' at line 2135
log_rule(Newline): rule is 'nl_create_func_def_one_liner' at line 2170
log_rule(Newline): rule is 'nl_collapse_empty_body' at line 2106
log_rule(Newline): rule is 'eat_blanks_after_open_brace' at line 2343
log_rule(Newline): rule is 'nl_var_def_blk_end' at line 2067
log_rule(Newline): rule is 'nl_func_var_def_blk' at line 2074
log_rule(Newline): rule is 'nl_var_def_blk_end' at line 2067
log_rule(Newline): rule is 'nl_func_var_def_blk' at line 2074
log_rule(Newline): rule is 'nl_var_def_blk_end' at line 2067
log_rule(Newline): rule is 'nl_func_var_def_blk' at line 2074
log_rule(Newline): rule is 'nl_var_def_blk_start' at line 2028
log_rule(Newline): rule is 'nl_var_def_blk_start' at line 2028
log_rule(Newline): rule is 'nl_func_decl_start' at line 4241
log_rule(Newline): rule is 'nl_func_def_start' at line 4242
log_rule(Newline): rule is 'nl_func_decl_start_single' at line 4243
log_rule(Newline): rule is 'nl_func_def_start_single' at line 4244
log_rule(Newline): rule is 'nl_func_decl_start_multi_line' at line 4245
log_rule(Newline): rule is 'nl_func_def_start_multi_line' at line 4246
log_rule(Newline): rule is 'nl_func_decl_args' at line 4247
log_rule(Newline): rule is 'nl_func_def_args' at line 4248
log_rule(Newline): rule is 'nl_func_decl_args_multi_line' at line 4249
log_rule(Newline): rule is 'nl_func_def_args_multi_line' at line 4250
log_rule(Newline): rule is 'nl_func_decl_end' at line 4251
log_rule(Newline): rule is 'nl_func_def_end' at line 4252
log_rule(Newline): rule is 'nl_func_decl_end_single' at line 4253
log_rule(Newline): rule is 'nl_func_def_end_single' at line 4254
log_rule(Newline): rule is 'nl_func_decl_end_multi_line' at line 4255
log_rule(Newline): rule is 'nl_func_def_end_multi_line' at line 4256
log_rule(Newline): rule is 'nl_func_decl_empty' at line 4257
log_rule(Newline): rule is 'nl_func_def_empty' at line 4258
log_rule(Newline): rule is 'nl_func_type_name' at line 4259
log_rule(Newline): rule is 'nl_func_type_name_class' at line 4260
log_rule(Newline): rule is 'nl_func_class_scope' at line 4261
log_rule(Newline): rule is 'nl_func_scope_name' at line 4262
log_rule(Newline): rule is 'nl_func_proto_type_name' at line 4263
log_rule(Newline): rule is 'nl_func_paren' at line 4264
log_rule(Newline): rule is 'nl_func_def_paren' at line 4265
log_rule(Newline): rule is 'nl_func_def_paren_empty' at line 4266
log_rule(Newline): rule is 'nl_func_paren_empty' at line 4267
log_rule(Newline): rule is 'nl_func_decl_start' at line 4241
log_rule(Newline): rule is 'nl_func_def_start' at line 4242
log_rule(Newline): rule is 'nl_func_decl_start_single' at line 4243
log_rule(Newline): rule is 'nl_func_def_start_single' at line 4244
log_rule(Newline): rule is 'nl_func_decl_start_multi_line' at line 4245
log_rule(Newline): rule is 'nl_func_def_start_multi_line' at line 4246
log_rule(Newline): rule is 'nl_func_decl_args' at line 4247
log_rule(Newline): rule is 'nl_func_def_args' at line 4248
log_rule(Newline): rule is 'nl_func_decl_args_multi_line' at line 4249
log_rule(Newline): rule is 'nl_func_def_args_multi_line' at line 4250
log_rule(Newline): rule is 'nl_func_decl_end' at line 4251
log_rule(Newline): rule is 'nl_func_def_end' at line 4252
log_rule(Newline): rule is 'nl_func_decl_end_single' at line 4253
log_rule(Newline): rule is 'nl_func_def_end_single' at line 4254
log_rule(Newline): rule is 'nl_func_decl_end_multi_line' at line 4255
log_rule(Newline): rule is 'nl_func_def_end_multi_line' at line 4256
log_rule(Newline): rule is 'nl_func_decl_empty' at line 4257
log_rule(Newline): rule is 'nl_func_def_empty' at line 4258
log_rule(Newline): rule is 'nl_func_type_name' at line 4259
log_rule(Newline): rule is 'nl_func_type_name_class' at line 4260
log_rule(Newline): rule is 'nl_func_class_scope' at line 4261
log_rule(Newline): rule is 'nl_func_scope_name' at line 4262
log_rule(Newline): rule is 'nl_func_proto_type_name' at line 4263
log_rule(Newline): rule is 'nl_func_paren' at line 4264
log_rule(Newline): rule is 'nl_func_def_paren' at line 4265
log_rule(Newline): rule is 'nl_func_def_paren_empty' at line 4266
log_rule(Newline): rule is 'nl_func_paren_empty' at line 4267
log_rule(Newline): rule is 'nl_func_decl_start' at line 4241
log_rule(Newline): rule is 'nl_func_def_start' at line 4242
log_rule(Newline): rule is 'nl_func_decl_start_single' at line 4243
log_rule(Newline): rule is 'nl_func_def_start_single' at line 4244
log_rule(Newline): rule is 'nl_func_decl_start_multi_line' at line 4245
log_rule(Newline): rule is 'nl_func_def_start_multi_line' at line 4246
log_rule(Newline): rule is 'nl_func_decl_args' at line 4247
log_rule(Newline): rule is 'nl_func_def_args' at line 4248
log_rule(Newline): rule is 'nl_func_decl_args_multi_line' at line 4249
log_rule(Newline): rule is 'nl_func_def_args_multi_line' at line 4250
log_rule(Newline): rule is 'nl_func_decl_end' at line 4251
log_rule(Newline): rule is 'nl_func_def_end' at line 4252
log_rule(Newline): rule is 'nl_func_decl_end_single' at line 4253
log_rule(Newline): rule is 'nl_func_def_end_single' at line 4254
log_rule(Newline): rule is 'nl_func_decl_end_multi_line' at line 4255
log_rule(Newline): rule is 'nl_func_def_end_multi_line' at line 4256
log_rule(Newline): rule is 'nl_func_decl_empty' at line 4257
log_rule(Newline): rule is 'nl_func_def_empty' at line 4258
log_rule(Newline): rule is 'nl_func_type_name' at line 4259
log_rule(Newline): rule is 'nl_func_type_name_class' at line 4260
log_rule(Newline): rule is 'nl_func_class_scope' at line 4261
log_rule(Newline): rule is 'nl_func_scope_name' at line 4262
log_rule(Newline): rule is 'nl_func_proto_type_name' at line 4263
log_rule(Newline): rule is 'nl_func_paren' at line 4264
log_rule(Newline): rule is 'nl_func_def_paren' at line 4265
log_rule(Newline): rule is 'nl_func_def_paren_empty' at line 4266
log_rule(Newline): rule is 'nl_func_paren_empty' at line 4267
log_rule(Newline): rule is 'nl_brace_brace' at line 3749
log_rule(Newline): rule is 'nl_type_brace_init_lst_open' at line 3829
log_rule(Newline): rule is 'nl_type_brace_init_lst_close' at line 3830
log_rule(Newline): rule is 'nl_define_macro' at line 2135
log_rule(Newline): rule is 'nl_create_func_def_one_liner' at line 2170
log_rule(Newline): rule is 'nl_fdef_brace_cond' at line 2274
log_rule(Newline): rule is 'nl_fdef_brace' at line 2289
log_rule(Newline): rule is 'nl_collapse_empty_body' at line 2106
log_rule(Newline): rule is 'eat_blanks_after_open_brace' at line 2343
log_rule(Newline): rule is 'nl_brace_brace' at line 3842
log_rule(Newline): rule is 'nl_brace_square' at line 3854
log_rule(Newline): rule is 'nl_brace_fparen' at line 3866
log_rule(Newline): rule is 'nl_type_brace_init_lst_close' at line 3887
log_rule(Newline): rule is 'nl_brace_struct_var' at line 3944
log_rule(Newline): rule is 'nl_after_brace_close' at line 3968
log_rule(Newline): rule is 'nl_func_decl_start' at line 4241
log_rule(Newline): rule is 'nl_func_def_start' at line 4242
log_rule(Newline): rule is 'nl_func_decl_start_single' at line 4243
log_rule(Newline): rule is 'nl_func_def_start_single' at line 4244
log_rule(Newline): rule is 'nl_func_decl_start_multi_line' at line 4245
log_rule(Newline): rule is 'nl_func_def_start_multi_line' at line 4246
log_rule(Newline): rule is 'nl_func_decl_args' at line 4247
log_rule(Newline): rule is 'nl_func_def_args' at line 4248
log_rule(Newline): rule is 'nl_func_decl_args_multi_line' at line 4249
log_rule(Newline): rule is 'nl_func_def_args_multi_line' at line 4250
log_rule(Newline): rule is 'nl_func_decl_end' at line 4251
log_rule(Newline): rule is 'nl_func_def_end' at line 4252
log_rule(Newline): rule is 'nl_func_decl_end_single' at line 4253
log_rule(Newline): rule is 'nl_func_def_end_single' at line 4254
log_rule(Newline): rule is 'nl_func_decl_end_multi_line' at line 4255
log_rule(Newline): rule is 'nl_func_def_end_multi_line' at line 4256
log_rule(Newline): rule is 'nl_func_decl_empty' at line 4257
log_rule(Newline): rule is 'nl_func_def_empty' at line 4258
log_rule(Newline): rule is 'nl_func_type_name' at line 4259
log_rule(Newline): rule is 'nl_func_type_name_class' at line 4260
log_rule(Newline): rule is 'nl_func_class_scope' at line 4261
log_rule(Newline): rule is 'nl_func_scope_name' at line 4262
log_rule(Newline): rule is 'nl_func_proto_type_name' at line 4263
log_rule(Newline): rule is 'nl_func_paren' at line 4264
log_rule(Newline): rule is 'nl_func_def_paren' at line 4265
log_rule(Newline): rule is 'nl_func_def_paren_empty' at line 4266
log_rule(Newline): rule is 'nl_func_paren_empty' at line 4267
log_rule(Newline): rule is 'nl_brace_brace' at line 3749
log_rule(Newline): rule is 'nl_type_brace_init_lst_open' at line 3829
log_rule(Newline): rule is 'nl_type_brace_init_lst_close' at line 3830
log_rule(Newline): rule is 'nl_define_macro' at line 2135
log_rule(Newline): rule is 'nl_create_func_def_one_liner' at line 2170
log_rule(Newline): rule is 'nl_fdef_brace_cond' at line 2274
log_rule(Newline): rule is 'nl_fdef_brace' at line 2289
log_rule(Newline): rule is 'nl_collapse_empty_body' at line 2106
log_rule(Newline): rule is 'eat_blanks_after_open_brace' at line 2343
log_rule(Newline): rule is 'nl_brace_brace' at line 3842
log_rule(Newline): rule is 'nl_brace_square' at line 3854
log_rule(Newline): rule is 'nl_brace_fparen' at line 3866
log_rule(Newline): rule is 'nl_type_brace_init_lst_close' at line 3887
log_rule(Newline): rule is 'nl_brace_struct_var' at line 3944
log_rule(Newline): rule is 'nl_after_brace_close' at line 3968
log_rule(Newline): rule is 'nl_after_semicolon' at line 4201
log_rule(Newline): rule is 'nl_after_semicolon' at line 4201
log_rule(Newline): rule is 'nl_brace_brace' at line 3842
log_rule(Newline): rule is 'nl_brace_square' at line 3854
log_rule(Newline): rule is 'nl_brace_fparen' at line 3866
log_rule(Newline): rule is 'nl_type_brace_init_lst_close' at line 3887
log_rule(Newline): rule is 'nl_brace_struct_var' at line 3944
log_rule(Newline): rule is 'nl_after_semicolon' at line 4201
log_rule(Newline): rule is 'nl_var_def_blk_end' at line 2067
log_rule(Newline): rule is 'nl_func_var_def_blk' at line 2074
log_rule(Newline): rule is 'nl_var_def_blk_end' at line 2067
log_rule(Newline): rule is 'nl_func_var_def_blk' at line 2074
log_rule(Newline): rule is 'nl_var_def_blk_end' at line 2067
log_rule(Newline): rule is 'nl_func_var_def_blk' at line 2074
log_rule(Newline): rule is 'nl_var_def_blk_end' at line 2067
log_rule(Newline): rule is 'nl_func_var_def_blk' at line 2074
log_rule(Newline): rule is 'nl_var_def_blk_start' at line 2028
log_rule(Newline): rule is 'nl_var_def_blk_start' at line 2028
log_rule(Newline): rule is 'nl_after_multiline_comment' at line 1996
log_rule(Newline): rule is 'nl_after_label_colon' at line 2002
log_rule(Newline): rule is 'nl_before_func_class_def' at line 1177
log_rule(Newline): rule is 'nl_before_func_class_proto' at line 1178
log_rule(Newline): rule is 'nl_before_func_body_def' at line 1179
log_rule(Newline): rule is 'nl_before_func_body_proto' at line 1180
log_rule(Newline): rule is 'nl_before_func_class_def' at line 1177
log_rule(Newline): rule is 'nl_before_func_class_proto' at line 1178
log_rule(Newline): rule is 'nl_before_func_body_def' at line 1179
log_rule(Newline): rule is 'nl_before_func_body_proto' at line 1180
log_rule(Newline): rule is 'pos_bool' at line 2010
log_rule(Newline): rule is 'pos_compare' at line 2016
log_rule(Newline): rule is 'pos_conditional' at line 2022
log_rule(Newline): rule is 'pos_comma' at line 2029
log_rule(Newline): rule is 'pos_enum_comma' at line 2030
log_rule(Newline): rule is 'pos_assign' at line 2036
log_rule(Newline): rule is 'pos_arith' at line 2042
log_rule(Newline): rule is 'pos_class_colon' at line 5212
log_rule(Newline): rule is 'nl_class_colon' at line 5214
log_rule(Newline): rule is 'nl_class_init_args' at line 5216
log_rule(Newline): rule is 'pos_class_comma' at line 5218
log_rule(Newline): rule is 'align_constr_value_span' at line 5233
log_rule(Newline): rule is 'pos_constr_colon' at line 5223
log_rule(Newline): rule is 'nl_constr_colon' at line 5225
log_rule(Newline): rule is 'nl_constr_init_args' at line 5227
log_rule(Newline): rule is 'pos_constr_comma' at line 5229
log_rule(Newline): rule is 'align_constr_value_span' at line 5233
log_rule(Newline): rule is 'nl_squeeze_ifdef' at line 2052
log_rule(Newline): rule is 'nl_squeeze_paren_close' at line 2058
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_start_of_file' at line 398
log_rule(Newline): rule is 'nl_end_of_file' at line 405
log_rule(Newline): rule is 'nl_after_class' at line 5768
log_rule(Newline): rule is 'nl_after_struct' at line 5769
log_rule(Newline): rule is 'nl_max_blank_in_func' at line 4730
log_rule(Newline): rule is 'sp_balance_nested_parens' at line 2074
log_rule(Newline): rule is 'mod_pawn_semicolon' at line 2081
log_rule(Newline): rule is 'mod_sort_import' at line 2088
log_rule(Newline): rule is 'mod_sort_include' at line 2089
log_rule(Newline): rule is 'mod_sort_using' at line 2090
space_text : orig_line is 1, orig_col is 1, 'struct' type is STRUCT
space_text : back-to-back words need a space: pc->text() 'struct', next->text() 'TelegramIndex'
space_text : orig_line is 1, orig_col is 1, pc-text() 'struct', type is STRUCT
do_space : orig_line is 1, orig_col is 1, first->text() 'struct', type is STRUCT
log_rule(Spacing [ ]): first->orig_line is 1, first->orig_col is 1, first->text() is 'struct', [STRUCT/NONE] <===>
   second->orig_line is 1, second->orig_col is 8, second->text() 'TelegramIndex', [TYPE/STRUCT] : rule ADD[ ]
 <force between 'struct' and 'TelegramIndex'> rule = ADD @ 1 => 8
space_text : orig_line is 1, orig_col is 8, 'TelegramIndex' type is TYPE
space_text : orig_line is 1, orig_col is 8, pc-text() 'TelegramIndex', type is TYPE
do_space : orig_line is 1, orig_col is 8, first->text() 'TelegramIndex', type is TYPE
 rule = REMOVE @ 0 => 21
space_text : orig_line is 1, orig_col is 21, <Newline>, nl is 1
space_text : orig_line is 2, orig_col is 1, '{' type is BRACE_OPEN
space_text : orig_line is 2, orig_col is 1, pc-text() '{', type is BRACE_OPEN
do_space : orig_line is 2, orig_col is 1, first->text() '{', type is BRACE_OPEN
 rule = REMOVE @ 0 => 2
space_text : orig_line is 2, orig_col is 2, <Newline>, nl is 1
space_text : orig_line is 3, orig_col is 1, 'TelegramIndex' type is FUNC_CLASS_DEF
space_text : orig_line is 3, orig_col is 1, pc-text() 'TelegramIndex', type is FUNC_CLASS_DEF
do_space : orig_line is 3, orig_col is 1, first->text() 'TelegramIndex', type is FUNC_CLASS_DEF
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 1, first->text() is 'TelegramIndex', [FUNC_CLASS_DEF/NONE] <===>
   second->orig_line is 3, second->orig_col is 14, second->text() '(', [FPAREN_OPEN/FUNC_CLASS_DEF] : rule sp_func_class_paren[ ]
 rule = IGNORE @ 0 => 14
space_text : orig_line is 3, orig_col is 14, '(' type is FPAREN_OPEN
space_text : orig_line is 3, orig_col is 14, pc-text() '(', type is FPAREN_OPEN
do_space : orig_line is 3, orig_col is 14, first->text() '(', type is FPAREN_OPEN
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 14, first->text() is '(', [FPAREN_OPEN/FUNC_CLASS_DEF] <===>
   second->orig_line is 3, second->orig_col is 15, second->text() 'const', [QUALIFIER/NONE] : rule sp_inside_fparen[ ]
 rule = IGNORE @ 0 => 15
space_text : orig_line is 3, orig_col is 15, 'const' type is QUALIFIER
space_text : back-to-back words need a space: pc->text() 'const', next->text() 'char'
space_text : orig_line is 3, orig_col is 15, pc-text() 'const', type is QUALIFIER
do_space : orig_line is 3, orig_col is 15, first->text() 'const', type is QUALIFIER
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 15, first->text() is 'const', [QUALIFIER/NONE] <===>
   second->orig_line is 3, second->orig_col is 21, second->text() 'char', [TYPE/NONE] : rule sp_after_type[ ]
 <force between 'const' and 'char'> rule = FORCE @ 1 => 21
space_text : orig_line is 3, orig_col is 21, 'char' type is TYPE
space_text : orig_line is 3, orig_col is 21, pc-text() 'char', type is TYPE
do_space : orig_line is 3, orig_col is 21, first->text() 'char', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 21, first->text() is 'char', [TYPE/NONE] <===>
   second->orig_line is 3, second->orig_col is 25, second->text() '*', [PTR_TYPE/NONE] : rule IGNORE[ ]
 rule = IGNORE @ 0 => 25
space_text : orig_line is 3, orig_col is 25, '*' type is PTR_TYPE
space_text : orig_line is 3, orig_col is 25, pc-text() '*', type is PTR_TYPE
do_space : orig_line is 3, orig_col is 25, first->text() '*', type is PTR_TYPE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 25, first->text() is '*', [PTR_TYPE/NONE] <===>
   second->orig_line is 3, second->orig_col is 27, second->text() 'pN', [WORD/NONE] : rule IGNORE[ ]
 rule = IGNORE @ 1 => 27
space_text : orig_line is 3, orig_col is 27, 'pN' type is WORD
space_text : orig_line is 3, orig_col is 27, pc-text() 'pN', type is WORD
do_space : orig_line is 3, orig_col is 27, first->text() 'pN', type is WORD
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 27, first->text() is 'pN', [WORD/NONE] <===>
   second->orig_line is 3, second->orig_col is 29, second->text() ',', [COMMA/NONE] : rule sp_before_comma[ ]
 rule = REMOVE @ 0 => 29
space_text : orig_line is 3, orig_col is 29, ',' type is COMMA
space_text : orig_line is 3, orig_col is 29, pc-text() ',', type is COMMA
do_space : orig_line is 3, orig_col is 29, first->text() ',', type is COMMA
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 29, first->text() is ',', [COMMA/NONE] <===>
   second->orig_line is 3, second->orig_col is 31, second->text() 'unsigned', [TYPE/NONE] : rule sp_after_comma[ ]
 rule = IGNORE @ 1 => 31
space_text : orig_line is 3, orig_col is 31, 'unsigned' type is TYPE
space_text : back-to-back words need a space: pc->text() 'unsigned', next->text() 'long'
space_text : orig_line is 3, orig_col is 31, pc-text() 'unsigned', type is TYPE
do_space : orig_line is 3, orig_col is 31, first->text() 'unsigned', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 31, first->text() is 'unsigned', [TYPE/NONE] <===>
   second->orig_line is 3, second->orig_col is 40, second->text() 'long', [TYPE/NONE] : rule sp_after_type[ ]
 <force between 'unsigned' and 'long'> rule = FORCE @ 1 => 40
space_text : orig_line is 3, orig_col is 40, 'long' type is TYPE
space_text : back-to-back words need a space: pc->text() 'long', next->text() 'nI'
space_text : orig_line is 3, orig_col is 40, pc-text() 'long', type is TYPE
do_space : orig_line is 3, orig_col is 40, first->text() 'long', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 40, first->text() is 'long', [TYPE/NONE] <===>
   second->orig_line is 3, second->orig_col is 45, second->text() 'nI', [WORD/NONE] : rule sp_after_type[ ]
 <force between 'long' and 'nI'> rule = FORCE @ 1 => 45
space_text : orig_line is 3, orig_col is 45, 'nI' type is WORD
space_text : orig_line is 3, orig_col is 45, pc-text() 'nI', type is WORD
do_space : orig_line is 3, orig_col is 45, first->text() 'nI', type is WORD
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 45, first->text() is 'nI', [WORD/NONE] <===>
   second->orig_line is 3, second->orig_col is 47, second->text() ')', [FPAREN_CLOSE/FUNC_CLASS_DEF] : rule sp_inside_fparen[ ]
 rule = IGNORE @ 0 => 47
space_text : orig_line is 3, orig_col is 47, ')' type is FPAREN_CLOSE
log_rule(Newline): rule is 'enable_digraphs' at line 63
space_text : orig_line is 3, orig_col is 47, pc-text() ')', type is FPAREN_CLOSE
do_space : orig_line is 3, orig_col is 47, first->text() ')', type is FPAREN_CLOSE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 47, first->text() is ')', [FPAREN_CLOSE/FUNC_CLASS_DEF] <===>
   second->orig_line is 3, second->orig_col is 49, second->text() ':', [CONSTR_COLON/NONE] : rule ADD[ ]
 rule = ADD @ 1 => 49
space_text : orig_line is 3, orig_col is 49, ':' type is CONSTR_COLON
space_text : orig_line is 3, orig_col is 49, pc-text() ':', type is CONSTR_COLON
do_space : orig_line is 3, orig_col is 49, first->text() ':', type is CONSTR_COLON
 rule = REMOVE @ 0 => 50
space_text : orig_line is 3, orig_col is 50, <Newline>, nl is 1
space_text : orig_line is 4, orig_col is 1, 'pTelName' type is FUNC_CTOR_VAR
space_text : orig_line is 4, orig_col is 1, pc-text() 'pTelName', type is FUNC_CTOR_VAR
do_space : orig_line is 4, orig_col is 1, first->text() 'pTelName', type is FUNC_CTOR_VAR
log_rule(Spacing [ ]): first->orig_line is 4, first->orig_col is 1, first->text() is 'pTelName', [FUNC_CTOR_VAR/NONE] <===>
   second->orig_line is 4, second->orig_col is 9, second->text() '(', [FPAREN_OPEN/FUNC_CTOR_VAR] : rule sp_func_call_paren[ ]
 rule = IGNORE @ 0 => 9
space_text : orig_line is 4, orig_col is 9, '(' type is FPAREN_OPEN
space_text : orig_line is 4, orig_col is 9, pc-text() '(', type is FPAREN_OPEN
do_space : orig_line is 4, orig_col is 9, first->text() '(', type is FPAREN_OPEN
log_rule(Spacing [ ]): first->orig_line is 4, first->orig_col is 9, first->text() is '(', [FPAREN_OPEN/FUNC_CTOR_VAR] <===>
   second->orig_line is 4, second->orig_col is 10, second->text() 'pN', [WORD/NONE] : rule sp_inside_fparen[ ]
 rule = IGNORE @ 0 => 10
space_text : orig_line is 4, orig_col is 10, 'pN' type is WORD
space_text : orig_line is 4, orig_col is 10, pc-text() 'pN', type is WORD
do_space : orig_line is 4, orig_col is 10, first->text() 'pN', type is WORD
log_rule(Spacing [ ]): first->orig_line is 4, first->orig_col is 10, first->text() is 'pN', [WORD/NONE] <===>
   second->orig_line is 4, second->orig_col is 12, second->text() ')', [FPAREN_CLOSE/FUNC_CTOR_VAR] : rule sp_inside_fparen[ ]
 rule = IGNORE @ 0 => 12
space_text : orig_line is 4, orig_col is 12, ')' type is FPAREN_CLOSE
log_rule(Newline): rule is 'enable_digraphs' at line 63
space_text : orig_line is 4, orig_col is 12, pc-text() ')', type is FPAREN_CLOSE
do_space : orig_line is 4, orig_col is 12, first->text() ')', type is FPAREN_CLOSE
log_rule(Spacing [ ]): first->orig_line is 4, first->orig_col is 12, first->text() is ')', [FPAREN_CLOSE/FUNC_CTOR_VAR] <===>
   second->orig_line is 4, second->orig_col is 13, second->text() ',', [COMMA/NONE] : rule sp_before_comma[ ]
 rule = REMOVE @ 0 => 13
space_text : orig_line is 4, orig_col is 13, ',' type is COMMA
space_text : orig_line is 4, orig_col is 13, pc-text() ',', type is COMMA
do_space : orig_line is 4, orig_col is 13, first->text() ',', type is COMMA
 rule = REMOVE @ 0 => 14
space_text : orig_line is 4, orig_col is 14, <Newline>, nl is 1
space_text : orig_line is 5, orig_col is 1, 'nTelIndex' type is FUNC_CTOR_VAR
space_text : orig_line is 5, orig_col is 1, pc-text() 'nTelIndex', type is FUNC_CTOR_VAR
do_space : orig_line is 5, orig_col is 1, first->text() 'nTelIndex', type is FUNC_CTOR_VAR
log_rule(Spacing [ ]): first->orig_line is 5, first->orig_col is 1, first->text() is 'nTelIndex', [FUNC_CTOR_VAR/NONE] <===>
   second->orig_line is 5, second->orig_col is 10, second->text() '(', [FPAREN_OPEN/FUNC_CTOR_VAR] : rule sp_func_call_paren[ ]
 rule = IGNORE @ 0 => 10
space_text : orig_line is 5, orig_col is 10, '(' type is FPAREN_OPEN
space_text : orig_line is 5, orig_col is 10, pc-text() '(', type is FPAREN_OPEN
do_space : orig_line is 5, orig_col is 10, first->text() '(', type is FPAREN_OPEN
log_rule(Spacing [ ]): first->orig_line is 5, first->orig_col is 10, first->text() is '(', [FPAREN_OPEN/FUNC_CTOR_VAR] <===>
   second->orig_line is 5, second->orig_col is 11, second->text() 'n', [WORD/NONE] : rule sp_inside_fparen[ ]
 rule = IGNORE @ 0 => 11
space_text : orig_line is 5, orig_col is 11, 'n' type is WORD
space_text : orig_line is 5, orig_col is 11, pc-text() 'n', type is WORD
do_space : orig_line is 5, orig_col is 11, first->text() 'n', type is WORD
log_rule(Spacing [ ]): first->orig_line is 5, first->orig_col is 11, first->text() is 'n', [WORD/NONE] <===>
   second->orig_line is 5, second->orig_col is 12, second->text() ')', [FPAREN_CLOSE/FUNC_CTOR_VAR] : rule sp_inside_fparen[ ]
 rule = IGNORE @ 0 => 12
space_text : orig_line is 5, orig_col is 12, ')' type is FPAREN_CLOSE
space_text : orig_line is 5, orig_col is 12, pc-text() ')', type is FPAREN_CLOSE
do_space : orig_line is 5, orig_col is 12, first->text() ')', type is FPAREN_CLOSE
 rule = REMOVE @ 0 => 13
space_text : orig_line is 5, orig_col is 13, <Newline>, nl is 1
space_text : orig_line is 6, orig_col is 1, '{' type is BRACE_OPEN
space_text : orig_line is 6, orig_col is 1, pc-text() '{', type is BRACE_OPEN
do_space : orig_line is 6, orig_col is 1, first->text() '{', type is BRACE_OPEN
 rule = REMOVE @ 0 => 2
space_text : orig_line is 6, orig_col is 2, <Newline>, nl is 1
space_text : orig_line is 7, orig_col is 1, '}' type is BRACE_CLOSE
space_text : orig_line is 7, orig_col is 1, pc-text() '}', type is BRACE_CLOSE
do_space : orig_line is 7, orig_col is 1, first->text() '}', type is BRACE_CLOSE
 rule = REMOVE @ 0 => 2
space_text : orig_line is 7, orig_col is 2, <Newline>, nl is 2
space_text : orig_line is 9, orig_col is 1, '~' type is DESTRUCTOR
space_text : orig_line is 9, orig_col is 1, pc-text() '~', type is DESTRUCTOR
do_space : orig_line is 9, orig_col is 1, first->text() '~', type is DESTRUCTOR
log_rule(Spacing [ ]): first->orig_line is 9, first->orig_col is 1, first->text() is '~', [DESTRUCTOR/NONE] <===>
   second->orig_line is 9, second->orig_col is 2, second->text() 'TelegramIndex', [FUNC_CLASS_DEF/DESTRUCTOR] : rule REMOVE[ ]
 rule = REMOVE @ 0 => 2
space_text : orig_line is 9, orig_col is 2, 'TelegramIndex' type is FUNC_CLASS_DEF
space_text : orig_line is 9, orig_col is 2, pc-text() 'TelegramIndex', type is FUNC_CLASS_DEF
do_space : orig_line is 9, orig_col is 2, first->text() 'TelegramIndex', type is FUNC_CLASS_DEF
log_rule(Spacing [ ]): first->orig_line is 9, first->orig_col is 2, first->text() is 'TelegramIndex', [FUNC_CLASS_DEF/DESTRUCTOR] <===>
   second->orig_line is 9, second->orig_col is 15, second->text() '(', [FPAREN_OPEN/FUNC_CLASS_DEF] : rule sp_func_class_paren[ ]
 rule = IGNORE @ 0 => 15
space_text : orig_line is 9, orig_col is 15, '(' type is FPAREN_OPEN
log_rule(Newline): rule is 'enable_digraphs' at line 63
space_text : orig_line is 9, orig_col is 15, pc-text() '(', type is FPAREN_OPEN
do_space : orig_line is 9, orig_col is 15, first->text() '(', type is FPAREN_OPEN
log_rule(Spacing [ ]): first->orig_line is 9, first->orig_col is 15, first->text() is '(', [FPAREN_OPEN/FUNC_CLASS_DEF] <===>
   second->orig_line is 9, second->orig_col is 16, second->text() ')', [FPAREN_CLOSE/FUNC_CLASS_DEF] : rule sp_inside_fparens[ ]
 rule = IGNORE @ 0 => 16
space_text : orig_line is 9, orig_col is 16, ')' type is FPAREN_CLOSE
space_text : orig_line is 9, orig_col is 16, pc-text() ')', type is FPAREN_CLOSE
do_space : orig_line is 9, orig_col is 16, first->text() ')', type is FPAREN_CLOSE
 rule = REMOVE @ 0 => 17
space_text : orig_line is 9, orig_col is 17, <Newline>, nl is 1
space_text : orig_line is 10, orig_col is 1, '{' type is BRACE_OPEN
space_text : orig_line is 10, orig_col is 1, pc-text() '{', type is BRACE_OPEN
do_space : orig_line is 10, orig_col is 1, first->text() '{', type is BRACE_OPEN
 rule = REMOVE @ 0 => 2
space_text : orig_line is 10, orig_col is 2, <Newline>, nl is 1
space_text : orig_line is 11, orig_col is 1, '}' type is BRACE_CLOSE
space_text : orig_line is 11, orig_col is 1, pc-text() '}', type is BRACE_CLOSE
do_space : orig_line is 11, orig_col is 1, first->text() '}', type is BRACE_CLOSE
 rule = REMOVE @ 0 => 2
space_text : orig_line is 11, orig_col is 2, <Newline>, nl is 2
space_text : orig_line is 13, orig_col is 1, 'const' type is QUALIFIER
space_text : back-to-back words need a space: pc->text() 'const', next->text() 'char'
space_text : orig_line is 13, orig_col is 1, pc-text() 'const', type is QUALIFIER
do_space : orig_line is 13, orig_col is 1, first->text() 'const', type is QUALIFIER
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 1, first->text() is 'const', [QUALIFIER/NONE] <===>
   second->orig_line is 13, second->orig_col is 7, second->text() 'char', [TYPE/NONE] : rule sp_after_type[ ]
 <force between 'const' and 'char'> rule = FORCE @ 1 => 7
space_text : orig_line is 13, orig_col is 7, 'char' type is TYPE
space_text : orig_line is 13, orig_col is 7, pc-text() 'char', type is TYPE
do_space : orig_line is 13, orig_col is 7, first->text() 'char', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 7, first->text() is 'char', [TYPE/NONE] <===>
   second->orig_line is 13, second->orig_col is 11, second->text() '*', [PTR_TYPE/NONE] : rule IGNORE[ ]
 rule = IGNORE @ 0 => 11
space_text : orig_line is 13, orig_col is 11, '*' type is PTR_TYPE
space_text : orig_line is 13, orig_col is 11, pc-text() '*', type is PTR_TYPE
do_space : orig_line is 13, orig_col is 11, first->text() '*', type is PTR_TYPE
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 11, first->text() is '*', [PTR_TYPE/NONE] <===>
   second->orig_line is 13, second->orig_col is 13, second->text() 'const', [QUALIFIER/NONE] : rule IGNORE[ ]
 rule = IGNORE @ 1 => 13
space_text : orig_line is 13, orig_col is 13, 'const' type is QUALIFIER
space_text : back-to-back words need a space: pc->text() 'const', next->text() 'pTelName'
space_text : orig_line is 13, orig_col is 13, pc-text() 'const', type is QUALIFIER
do_space : orig_line is 13, orig_col is 13, first->text() 'const', type is QUALIFIER
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 13, first->text() is 'const', [QUALIFIER/NONE] <===>
   second->orig_line is 13, second->orig_col is 19, second->text() 'pTelName', [WORD/NONE] : rule sp_after_type[ ]
 <force between 'const' and 'pTelName'> rule = FORCE @ 1 => 19
space_text : orig_line is 13, orig_col is 19, 'pTelName' type is WORD
space_text : orig_line is 13, orig_col is 19, pc-text() 'pTelName', type is WORD
do_space : orig_line is 13, orig_col is 19, first->text() 'pTelName', type is WORD
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 19, first->text() is 'pTelName', [WORD/NONE] <===>
   second->orig_line is 13, second->orig_col is 27, second->text() ';', [SEMICOLON/NONE] : rule sp_before_semi[ ]
 rule = REMOVE @ 0 => 27
space_text : orig_line is 13, orig_col is 27, ';' type is SEMICOLON
space_text : orig_line is 13, orig_col is 27, pc-text() ';', type is SEMICOLON
do_space : orig_line is 13, orig_col is 27, first->text() ';', type is SEMICOLON
 rule = REMOVE @ 0 => 28
space_text : orig_line is 13, orig_col is 28, <Newline>, nl is 1
space_text : orig_line is 14, orig_col is 1, 'unsigned' type is TYPE
space_text : back-to-back words need a space: pc->text() 'unsigned', next->text() 'long'
space_text : orig_line is 14, orig_col is 1, pc-text() 'unsigned', type is TYPE
do_space : orig_line is 14, orig_col is 1, first->text() 'unsigned', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 14, first->orig_col is 1, first->text() is 'unsigned', [TYPE/NONE] <===>
   second->orig_line is 14, second->orig_col is 10, second->text() 'long', [TYPE/NONE] : rule sp_after_type[ ]
 <force between 'unsigned' and 'long'> rule = FORCE @ 1 => 10
space_text : orig_line is 14, orig_col is 10, 'long' type is TYPE
space_text : back-to-back words need a space: pc->text() 'long', next->text() 'nTelIndex'
space_text : orig_line is 14, orig_col is 10, pc-text() 'long', type is TYPE
do_space : orig_line is 14, orig_col is 10, first->text() 'long', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 14, first->orig_col is 10, first->text() is 'long', [TYPE/NONE] <===>
   second->orig_line is 14, second->orig_col is 15, second->text() 'nTelIndex', [WORD/NONE] : rule sp_after_type[ ]
 <force between 'long' and 'nTelIndex'> rule = FORCE @ 1 => 15
space_text : orig_line is 14, orig_col is 15, 'nTelIndex' type is WORD
space_text : orig_line is 14, orig_col is 15, pc-text() 'nTelIndex', type is WORD
do_space : orig_line is 14, orig_col is 15, first->text() 'nTelIndex', type is WORD
log_rule(Spacing [ ]): first->orig_line is 14, first->orig_col is 15, first->text() is 'nTelIndex', [WORD/NONE] <===>
   second->orig_line is 14, second->orig_col is 24, second->text() ';', [SEMICOLON/NONE] : rule sp_before_semi[ ]
 rule = REMOVE @ 0 => 24
space_text : orig_line is 14, orig_col is 24, ';' type is SEMICOLON
space_text : orig_line is 14, orig_col is 24, pc-text() ';', type is SEMICOLON
do_space : orig_line is 14, orig_col is 24, first->text() ';', type is SEMICOLON
 rule = REMOVE @ 0 => 25
space_text : orig_line is 14, orig_col is 25, <Newline>, nl is 1
space_text : orig_line is 15, orig_col is 1, '}' type is BRACE_CLOSE
log_rule(Newline): rule is 'enable_digraphs' at line 63
space_text : orig_line is 15, orig_col is 1, pc-text() '}', type is BRACE_CLOSE
do_space : orig_line is 15, orig_col is 1, first->text() '}', type is BRACE_CLOSE
log_rule(Spacing [ ]): first->orig_line is 15, first->orig_col is 1, first->text() is '}', [BRACE_CLOSE/STRUCT] <===>
   second->orig_line is 15, second->orig_col is 2, second->text() ';', [SEMICOLON/STRUCT] : rule sp_before_semi[ ]
 rule = REMOVE @ 0 => 2
space_text : orig_line is 15, orig_col is 2, ';' type is SEMICOLON
space_text : orig_line is 15, orig_col is 2, pc-text() ';', type is SEMICOLON
do_space : orig_line is 15, orig_col is 2, first->text() ';', type is SEMICOLON
 rule = REMOVE @ 0 => 3
space_text : orig_line is 15, orig_col is 3, <Newline>, nl is 2
log_rule(Newline): rule is 'align_pp_define_span' at line 2102
log_rule(Newline): rule is 'indent_columns' at line 572
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_macro_brace' at line 1453
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 3, orig_col is 1, [FUNC_CLASS_DEF/NONE], text() 'TelegramIndex' <==>
space_col_align : second->orig_line is 3, orig_col is 14 [FPAREN_OPEN/FUNC_CLASS_DEF], text() '(', [CallStack]
do_space : orig_line is 3, orig_col is 1, first->text() 'TelegramIndex', type is FUNC_CLASS_DEF
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 1, first->text() is 'TelegramIndex', [FUNC_CLASS_DEF/NONE] <===>
   second->orig_line is 3, second->orig_col is 14, second->text() '(', [FPAREN_OPEN/FUNC_CLASS_DEF] : rule sp_func_class_paren[ ]
space_col_align : av is ignore
space_col_align :    len is 13
space_col_align :    => coldiff is 13
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 3
space_col_align :    => second->orig_line is 3
space_col_align :    => first->text()     is 'TelegramIndex'
space_col_align :    => second->text()    is '('
space_col_align :    => first->orig_col   is 1
space_col_align :    => second->orig_col  is 14
space_col_align :    => first->len()      is 13
space_col_align :    => coldiff is 13
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 14, [FPAREN_OPEN/FUNC_CLASS_DEF], text() '(' <==>
space_col_align : second->orig_line is 3, orig_col is 15 [QUALIFIER/NONE], text() 'const', [CallStack]
do_space : orig_line is 3, orig_col is 14, first->text() '(', type is FPAREN_OPEN
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 14, first->text() is '(', [FPAREN_OPEN/FUNC_CLASS_DEF] <===>
   second->orig_line is 3, second->orig_col is 15, second->text() 'const', [QUALIFIER/NONE] : rule sp_inside_fparen[ ]
space_col_align : av is ignore
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 3
space_col_align :    => second->orig_line is 3
space_col_align :    => first->text()     is '('
space_col_align :    => second->text()    is 'const'
space_col_align :    => first->orig_col   is 14
space_col_align :    => second->orig_col  is 15
space_col_align :    => first->len()      is 1
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 15, [QUALIFIER/NONE], text() 'const' <==>
space_col_align : second->orig_line is 3, orig_col is 21 [TYPE/NONE], text() 'char', [CallStack]
do_space : orig_line is 3, orig_col is 15, first->text() 'const', type is QUALIFIER
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 15, first->text() is 'const', [QUALIFIER/NONE] <===>
   second->orig_line is 3, second->orig_col is 21, second->text() 'char', [TYPE/NONE] : rule sp_after_type[ ]
 <force between 'const' and 'char'>space_col_align : av is force
space_col_align :    len is 5
space_col_align :    => coldiff is 5
space_col_align :    => av is FORCE
space_col_align :    => coldiff is 6
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 21, [TYPE/NONE], text() 'char' <==>
space_col_align : second->orig_line is 3, orig_col is 25 [PTR_TYPE/NONE], text() '*', [CallStack]
do_space : orig_line is 3, orig_col is 21, first->text() 'char', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 21, first->text() is 'char', [TYPE/NONE] <===>
   second->orig_line is 3, second->orig_col is 25, second->text() '*', [PTR_TYPE/NONE] : rule IGNORE[ ]
space_col_align : av is ignore
space_col_align :    len is 4
space_col_align :    => coldiff is 4
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 3
space_col_align :    => second->orig_line is 3
space_col_align :    => first->text()     is 'char'
space_col_align :    => second->text()    is '*'
space_col_align :    => first->orig_col   is 21
space_col_align :    => second->orig_col  is 25
space_col_align :    => first->len()      is 4
space_col_align :    => coldiff is 4
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 25, [PTR_TYPE/NONE], text() '*' <==>
space_col_align : second->orig_line is 3, orig_col is 27 [WORD/NONE], text() 'pN', [CallStack]
do_space : orig_line is 3, orig_col is 25, first->text() '*', type is PTR_TYPE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 25, first->text() is '*', [PTR_TYPE/NONE] <===>
   second->orig_line is 3, second->orig_col is 27, second->text() 'pN', [WORD/NONE] : rule IGNORE[ ]
space_col_align : av is ignore
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 3
space_col_align :    => second->orig_line is 3
space_col_align :    => first->text()     is '*'
space_col_align :    => second->text()    is 'pN'
space_col_align :    => first->orig_col   is 25
space_col_align :    => second->orig_col  is 27
space_col_align :    => first->len()      is 1
space_col_align :    => coldiff is 2
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 27, [WORD/NONE], text() 'pN' <==>
space_col_align : second->orig_line is 3, orig_col is 29 [COMMA/NONE], text() ',', [CallStack]
do_space : orig_line is 3, orig_col is 27, first->text() 'pN', type is WORD
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 27, first->text() is 'pN', [WORD/NONE] <===>
   second->orig_line is 3, second->orig_col is 29, second->text() ',', [COMMA/NONE] : rule sp_before_comma[ ]
space_col_align : av is remove
space_col_align :    len is 2
space_col_align :    => coldiff is 2
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 2
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 29, [COMMA/NONE], text() ',' <==>
space_col_align : second->orig_line is 3, orig_col is 31 [TYPE/NONE], text() 'unsigned', [CallStack]
do_space : orig_line is 3, orig_col is 29, first->text() ',', type is COMMA
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 29, first->text() is ',', [COMMA/NONE] <===>
   second->orig_line is 3, second->orig_col is 31, second->text() 'unsigned', [TYPE/NONE] : rule sp_after_comma[ ]
space_col_align : av is ignore
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 3
space_col_align :    => second->orig_line is 3
space_col_align :    => first->text()     is ','
space_col_align :    => second->text()    is 'unsigned'
space_col_align :    => first->orig_col   is 29
space_col_align :    => second->orig_col  is 31
space_col_align :    => first->len()      is 1
space_col_align :    => coldiff is 2
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 31, [TYPE/NONE], text() 'unsigned' <==>
space_col_align : second->orig_line is 3, orig_col is 40 [TYPE/NONE], text() 'long', [CallStack]
do_space : orig_line is 3, orig_col is 31, first->text() 'unsigned', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 31, first->text() is 'unsigned', [TYPE/NONE] <===>
   second->orig_line is 3, second->orig_col is 40, second->text() 'long', [TYPE/NONE] : rule sp_after_type[ ]
 <force between 'unsigned' and 'long'>space_col_align : av is force
space_col_align :    len is 8
space_col_align :    => coldiff is 8
space_col_align :    => av is FORCE
space_col_align :    => coldiff is 9
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 40, [TYPE/NONE], text() 'long' <==>
space_col_align : second->orig_line is 3, orig_col is 45 [WORD/NONE], text() 'nI', [CallStack]
do_space : orig_line is 3, orig_col is 40, first->text() 'long', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 40, first->text() is 'long', [TYPE/NONE] <===>
   second->orig_line is 3, second->orig_col is 45, second->text() 'nI', [WORD/NONE] : rule sp_after_type[ ]
 <force between 'long' and 'nI'>space_col_align : av is force
space_col_align :    len is 4
space_col_align :    => coldiff is 4
space_col_align :    => av is FORCE
space_col_align :    => coldiff is 5
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 45, [WORD/NONE], text() 'nI' <==>
space_col_align : second->orig_line is 3, orig_col is 47 [FPAREN_CLOSE/FUNC_CLASS_DEF], text() ')', [CallStack]
do_space : orig_line is 3, orig_col is 45, first->text() 'nI', type is WORD
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 45, first->text() is 'nI', [WORD/NONE] <===>
   second->orig_line is 3, second->orig_col is 47, second->text() ')', [FPAREN_CLOSE/FUNC_CLASS_DEF] : rule sp_inside_fparen[ ]
space_col_align : av is ignore
space_col_align :    len is 2
space_col_align :    => coldiff is 2
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 3
space_col_align :    => second->orig_line is 3
space_col_align :    => first->text()     is 'nI'
space_col_align :    => second->text()    is ')'
space_col_align :    => first->orig_col   is 45
space_col_align :    => second->orig_col  is 47
space_col_align :    => first->len()      is 2
space_col_align :    => coldiff is 2
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 47, [FPAREN_CLOSE/FUNC_CLASS_DEF], text() ')' <==>
space_col_align : second->orig_line is 3, orig_col is 49 [CONSTR_COLON/NONE], text() ':', [CallStack]
do_space : orig_line is 3, orig_col is 47, first->text() ')', type is FPAREN_CLOSE
log_rule(Spacing [ ]): first->orig_line is 3, first->orig_col is 47, first->text() is ')', [FPAREN_CLOSE/FUNC_CLASS_DEF] <===>
   second->orig_line is 3, second->orig_col is 49, second->text() ':', [CONSTR_COLON/NONE] : rule ADD[ ]
space_col_align : av is add
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is ADD
space_col_align :    => coldiff is 2
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 3, orig_col is 49, [CONSTR_COLON/NONE], text() ':' <==>
space_col_align : second->orig_line is 3, orig_col is 50 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 3, orig_col is 49, first->text() ':', type is CONSTR_COLON
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_paren_nl' at line 2360
log_rule(Newline): rule is 'indent_paren_nl' at line 2361
log_rule(Newline): rule is 'indent_square_nl' at line 2362
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2369
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2370
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2371
log_rule(Newline): rule is 'use_indent_continue_only_once' at line 2445
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2446
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2447
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2448
log_rule(Newline): rule is 'indent_continue' at line 2468
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_class_colon' at line 2120
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 4, orig_col is 1, [FUNC_CTOR_VAR/NONE], text() 'pTelName' <==>
space_col_align : second->orig_line is 4, orig_col is 9 [FPAREN_OPEN/FUNC_CTOR_VAR], text() '(', [CallStack]
do_space : orig_line is 4, orig_col is 1, first->text() 'pTelName', type is FUNC_CTOR_VAR
log_rule(Spacing [ ]): first->orig_line is 4, first->orig_col is 1, first->text() is 'pTelName', [FUNC_CTOR_VAR/NONE] <===>
   second->orig_line is 4, second->orig_col is 9, second->text() '(', [FPAREN_OPEN/FUNC_CTOR_VAR] : rule sp_func_call_paren[ ]
space_col_align : av is ignore
space_col_align :    len is 8
space_col_align :    => coldiff is 8
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 4
space_col_align :    => second->orig_line is 4
space_col_align :    => first->text()     is 'pTelName'
space_col_align :    => second->text()    is '('
space_col_align :    => first->orig_col   is 1
space_col_align :    => second->orig_col  is 9
space_col_align :    => first->len()      is 8
space_col_align :    => coldiff is 8
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 4, orig_col is 9, [FPAREN_OPEN/FUNC_CTOR_VAR], text() '(' <==>
space_col_align : second->orig_line is 4, orig_col is 10 [WORD/NONE], text() 'pN', [CallStack]
do_space : orig_line is 4, orig_col is 9, first->text() '(', type is FPAREN_OPEN
log_rule(Spacing [ ]): first->orig_line is 4, first->orig_col is 9, first->text() is '(', [FPAREN_OPEN/FUNC_CTOR_VAR] <===>
   second->orig_line is 4, second->orig_col is 10, second->text() 'pN', [WORD/NONE] : rule sp_inside_fparen[ ]
space_col_align : av is ignore
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 4
space_col_align :    => second->orig_line is 4
space_col_align :    => first->text()     is '('
space_col_align :    => second->text()    is 'pN'
space_col_align :    => first->orig_col   is 9
space_col_align :    => second->orig_col  is 10
space_col_align :    => first->len()      is 1
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 4, orig_col is 10, [WORD/NONE], text() 'pN' <==>
space_col_align : second->orig_line is 4, orig_col is 12 [FPAREN_CLOSE/FUNC_CTOR_VAR], text() ')', [CallStack]
do_space : orig_line is 4, orig_col is 10, first->text() 'pN', type is WORD
log_rule(Spacing [ ]): first->orig_line is 4, first->orig_col is 10, first->text() is 'pN', [WORD/NONE] <===>
   second->orig_line is 4, second->orig_col is 12, second->text() ')', [FPAREN_CLOSE/FUNC_CTOR_VAR] : rule sp_inside_fparen[ ]
space_col_align : av is ignore
space_col_align :    len is 2
space_col_align :    => coldiff is 2
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 4
space_col_align :    => second->orig_line is 4
space_col_align :    => first->text()     is 'pN'
space_col_align :    => second->text()    is ')'
space_col_align :    => first->orig_col   is 10
space_col_align :    => second->orig_col  is 12
space_col_align :    => first->len()      is 2
space_col_align :    => coldiff is 2
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 4, orig_col is 12, [FPAREN_CLOSE/FUNC_CTOR_VAR], text() ')' <==>
space_col_align : second->orig_line is 4, orig_col is 13 [COMMA/NONE], text() ',', [CallStack]
do_space : orig_line is 4, orig_col is 12, first->text() ')', type is FPAREN_CLOSE
log_rule(Spacing [ ]): first->orig_line is 4, first->orig_col is 12, first->text() is ')', [FPAREN_CLOSE/FUNC_CTOR_VAR] <===>
   second->orig_line is 4, second->orig_col is 13, second->text() ',', [COMMA/NONE] : rule sp_before_comma[ ]
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 4, orig_col is 13, [COMMA/NONE], text() ',' <==>
space_col_align : second->orig_line is 4, orig_col is 14 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 4, orig_col is 13, first->text() ',', type is COMMA
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_paren_nl' at line 2360
log_rule(Newline): rule is 'indent_paren_nl' at line 2361
log_rule(Newline): rule is 'indent_square_nl' at line 2362
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2369
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2370
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2371
log_rule(Newline): rule is 'use_indent_continue_only_once' at line 2445
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2446
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2447
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2448
log_rule(Newline): rule is 'indent_continue' at line 2468
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 5, orig_col is 1, [FUNC_CTOR_VAR/NONE], text() 'nTelIndex' <==>
space_col_align : second->orig_line is 5, orig_col is 10 [FPAREN_OPEN/FUNC_CTOR_VAR], text() '(', [CallStack]
do_space : orig_line is 5, orig_col is 1, first->text() 'nTelIndex', type is FUNC_CTOR_VAR
log_rule(Spacing [ ]): first->orig_line is 5, first->orig_col is 1, first->text() is 'nTelIndex', [FUNC_CTOR_VAR/NONE] <===>
   second->orig_line is 5, second->orig_col is 10, second->text() '(', [FPAREN_OPEN/FUNC_CTOR_VAR] : rule sp_func_call_paren[ ]
space_col_align : av is ignore
space_col_align :    len is 9
space_col_align :    => coldiff is 9
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 5
space_col_align :    => second->orig_line is 5
space_col_align :    => first->text()     is 'nTelIndex'
space_col_align :    => second->text()    is '('
space_col_align :    => first->orig_col   is 1
space_col_align :    => second->orig_col  is 10
space_col_align :    => first->len()      is 9
space_col_align :    => coldiff is 9
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 5, orig_col is 10, [FPAREN_OPEN/FUNC_CTOR_VAR], text() '(' <==>
space_col_align : second->orig_line is 5, orig_col is 11 [WORD/NONE], text() 'n', [CallStack]
do_space : orig_line is 5, orig_col is 10, first->text() '(', type is FPAREN_OPEN
log_rule(Spacing [ ]): first->orig_line is 5, first->orig_col is 10, first->text() is '(', [FPAREN_OPEN/FUNC_CTOR_VAR] <===>
   second->orig_line is 5, second->orig_col is 11, second->text() 'n', [WORD/NONE] : rule sp_inside_fparen[ ]
space_col_align : av is ignore
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 5
space_col_align :    => second->orig_line is 5
space_col_align :    => first->text()     is '('
space_col_align :    => second->text()    is 'n'
space_col_align :    => first->orig_col   is 10
space_col_align :    => second->orig_col  is 11
space_col_align :    => first->len()      is 1
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 5, orig_col is 11, [WORD/NONE], text() 'n' <==>
space_col_align : second->orig_line is 5, orig_col is 12 [FPAREN_CLOSE/FUNC_CTOR_VAR], text() ')', [CallStack]
do_space : orig_line is 5, orig_col is 11, first->text() 'n', type is WORD
log_rule(Spacing [ ]): first->orig_line is 5, first->orig_col is 11, first->text() is 'n', [WORD/NONE] <===>
   second->orig_line is 5, second->orig_col is 12, second->text() ')', [FPAREN_CLOSE/FUNC_CTOR_VAR] : rule sp_inside_fparen[ ]
space_col_align : av is ignore
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 5
space_col_align :    => second->orig_line is 5
space_col_align :    => first->text()     is 'n'
space_col_align :    => second->text()    is ')'
space_col_align :    => first->orig_col   is 11
space_col_align :    => second->orig_col  is 12
space_col_align :    => first->len()      is 1
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 5, orig_col is 12, [FPAREN_CLOSE/FUNC_CTOR_VAR], text() ')' <==>
space_col_align : second->orig_line is 5, orig_col is 13 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 5, orig_col is 12, first->text() ')', type is FPAREN_CLOSE
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_paren_nl' at line 2360
log_rule(Newline): rule is 'indent_paren_nl' at line 2361
log_rule(Newline): rule is 'indent_square_nl' at line 2362
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2369
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2370
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2371
log_rule(Newline): rule is 'use_indent_continue_only_once' at line 2445
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2446
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2447
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2448
log_rule(Newline): rule is 'indent_continue' at line 2468
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_macro_brace' at line 1453
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 6, orig_col is 1, [BRACE_OPEN/FUNC_CLASS_DEF], text() '{' <==>
space_col_align : second->orig_line is 6, orig_col is 2 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 6, orig_col is 1, first->text() '{', type is BRACE_OPEN
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 7, orig_col is 1, [BRACE_CLOSE/FUNC_CLASS_DEF], text() '}' <==>
space_col_align : second->orig_line is 7, orig_col is 2 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 7, orig_col is 1, first->text() '}', type is BRACE_CLOSE
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 9, orig_col is 1, [DESTRUCTOR/NONE], text() '~' <==>
space_col_align : second->orig_line is 9, orig_col is 2 [FUNC_CLASS_DEF/DESTRUCTOR], text() 'TelegramIndex', [CallStack]
do_space : orig_line is 9, orig_col is 1, first->text() '~', type is DESTRUCTOR
log_rule(Spacing [ ]): first->orig_line is 9, first->orig_col is 1, first->text() is '~', [DESTRUCTOR/NONE] <===>
   second->orig_line is 9, second->orig_col is 2, second->text() 'TelegramIndex', [FUNC_CLASS_DEF/DESTRUCTOR] : rule REMOVE[ ]
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 9, orig_col is 2, [FUNC_CLASS_DEF/DESTRUCTOR], text() 'TelegramIndex' <==>
space_col_align : second->orig_line is 9, orig_col is 15 [FPAREN_OPEN/FUNC_CLASS_DEF], text() '(', [CallStack]
do_space : orig_line is 9, orig_col is 2, first->text() 'TelegramIndex', type is FUNC_CLASS_DEF
log_rule(Spacing [ ]): first->orig_line is 9, first->orig_col is 2, first->text() is 'TelegramIndex', [FUNC_CLASS_DEF/DESTRUCTOR] <===>
   second->orig_line is 9, second->orig_col is 15, second->text() '(', [FPAREN_OPEN/FUNC_CLASS_DEF] : rule sp_func_class_paren[ ]
space_col_align : av is ignore
space_col_align :    len is 13
space_col_align :    => coldiff is 13
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 9
space_col_align :    => second->orig_line is 9
space_col_align :    => first->text()     is 'TelegramIndex'
space_col_align :    => second->text()    is '('
space_col_align :    => first->orig_col   is 2
space_col_align :    => second->orig_col  is 15
space_col_align :    => first->len()      is 13
space_col_align :    => coldiff is 13
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 9, orig_col is 15, [FPAREN_OPEN/FUNC_CLASS_DEF], text() '(' <==>
space_col_align : second->orig_line is 9, orig_col is 16 [FPAREN_CLOSE/FUNC_CLASS_DEF], text() ')', [CallStack]
do_space : orig_line is 9, orig_col is 15, first->text() '(', type is FPAREN_OPEN
log_rule(Spacing [ ]): first->orig_line is 9, first->orig_col is 15, first->text() is '(', [FPAREN_OPEN/FUNC_CLASS_DEF] <===>
   second->orig_line is 9, second->orig_col is 16, second->text() ')', [FPAREN_CLOSE/FUNC_CLASS_DEF] : rule sp_inside_fparens[ ]
space_col_align : av is ignore
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 9
space_col_align :    => second->orig_line is 9
space_col_align :    => first->text()     is '('
space_col_align :    => second->text()    is ')'
space_col_align :    => first->orig_col   is 15
space_col_align :    => second->orig_col  is 16
space_col_align :    => first->len()      is 1
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 9, orig_col is 16, [FPAREN_CLOSE/FUNC_CLASS_DEF], text() ')' <==>
space_col_align : second->orig_line is 9, orig_col is 17 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 9, orig_col is 16, first->text() ')', type is FPAREN_CLOSE
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_paren_nl' at line 2360
log_rule(Newline): rule is 'indent_paren_nl' at line 2361
log_rule(Newline): rule is 'indent_square_nl' at line 2362
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2369
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2370
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2371
log_rule(Newline): rule is 'use_indent_continue_only_once' at line 2445
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2446
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2447
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2448
log_rule(Newline): rule is 'indent_continue' at line 2468
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_macro_brace' at line 1453
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 10, orig_col is 1, [BRACE_OPEN/FUNC_CLASS_DEF], text() '{' <==>
space_col_align : second->orig_line is 10, orig_col is 2 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 10, orig_col is 1, first->text() '{', type is BRACE_OPEN
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 11, orig_col is 1, [BRACE_CLOSE/FUNC_CLASS_DEF], text() '}' <==>
space_col_align : second->orig_line is 11, orig_col is 2 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 11, orig_col is 1, first->text() '}', type is BRACE_CLOSE
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 13, orig_col is 1, [QUALIFIER/NONE], text() 'const' <==>
space_col_align : second->orig_line is 13, orig_col is 7 [TYPE/NONE], text() 'char', [CallStack]
do_space : orig_line is 13, orig_col is 1, first->text() 'const', type is QUALIFIER
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 1, first->text() is 'const', [QUALIFIER/NONE] <===>
   second->orig_line is 13, second->orig_col is 7, second->text() 'char', [TYPE/NONE] : rule sp_after_type[ ]
 <force between 'const' and 'char'>space_col_align : av is force
space_col_align :    len is 5
space_col_align :    => coldiff is 5
space_col_align :    => av is FORCE
space_col_align :    => coldiff is 6
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 13, orig_col is 7, [TYPE/NONE], text() 'char' <==>
space_col_align : second->orig_line is 13, orig_col is 11 [PTR_TYPE/NONE], text() '*', [CallStack]
do_space : orig_line is 13, orig_col is 7, first->text() 'char', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 7, first->text() is 'char', [TYPE/NONE] <===>
   second->orig_line is 13, second->orig_col is 11, second->text() '*', [PTR_TYPE/NONE] : rule IGNORE[ ]
space_col_align : av is ignore
space_col_align :    len is 4
space_col_align :    => coldiff is 4
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 13
space_col_align :    => second->orig_line is 13
space_col_align :    => first->text()     is 'char'
space_col_align :    => second->text()    is '*'
space_col_align :    => first->orig_col   is 7
space_col_align :    => second->orig_col  is 11
space_col_align :    => first->len()      is 4
space_col_align :    => coldiff is 4
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 13, orig_col is 11, [PTR_TYPE/NONE], text() '*' <==>
space_col_align : second->orig_line is 13, orig_col is 13 [QUALIFIER/NONE], text() 'const', [CallStack]
do_space : orig_line is 13, orig_col is 11, first->text() '*', type is PTR_TYPE
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 11, first->text() is '*', [PTR_TYPE/NONE] <===>
   second->orig_line is 13, second->orig_col is 13, second->text() 'const', [QUALIFIER/NONE] : rule IGNORE[ ]
space_col_align : av is ignore
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is IGNORE
space_col_align :    => first->orig_line  is 13
space_col_align :    => second->orig_line is 13
space_col_align :    => first->text()     is '*'
space_col_align :    => second->text()    is 'const'
space_col_align :    => first->orig_col   is 11
space_col_align :    => second->orig_col  is 13
space_col_align :    => first->len()      is 1
space_col_align :    => coldiff is 2
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 13, orig_col is 13, [QUALIFIER/NONE], text() 'const' <==>
space_col_align : second->orig_line is 13, orig_col is 19 [WORD/NONE], text() 'pTelName', [CallStack]
do_space : orig_line is 13, orig_col is 13, first->text() 'const', type is QUALIFIER
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 13, first->text() is 'const', [QUALIFIER/NONE] <===>
   second->orig_line is 13, second->orig_col is 19, second->text() 'pTelName', [WORD/NONE] : rule sp_after_type[ ]
 <force between 'const' and 'pTelName'>space_col_align : av is force
space_col_align :    len is 5
space_col_align :    => coldiff is 5
space_col_align :    => av is FORCE
space_col_align :    => coldiff is 6
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 13, orig_col is 19, [WORD/NONE], text() 'pTelName' <==>
space_col_align : second->orig_line is 13, orig_col is 27 [SEMICOLON/NONE], text() ';', [CallStack]
do_space : orig_line is 13, orig_col is 19, first->text() 'pTelName', type is WORD
log_rule(Spacing [ ]): first->orig_line is 13, first->orig_col is 19, first->text() is 'pTelName', [WORD/NONE] <===>
   second->orig_line is 13, second->orig_col is 27, second->text() ';', [SEMICOLON/NONE] : rule sp_before_semi[ ]
space_col_align : av is remove
space_col_align :    len is 8
space_col_align :    => coldiff is 8
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 8
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 13, orig_col is 27, [SEMICOLON/NONE], text() ';' <==>
space_col_align : second->orig_line is 13, orig_col is 28 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 13, orig_col is 27, first->text() ';', type is SEMICOLON
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_continue' at line 2945
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'pos_conditional' at line 3364
space_col_align : first->orig_line is 14, orig_col is 1, [TYPE/NONE], text() 'unsigned' <==>
space_col_align : second->orig_line is 14, orig_col is 10 [TYPE/NONE], text() 'long', [CallStack]
do_space : orig_line is 14, orig_col is 1, first->text() 'unsigned', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 14, first->orig_col is 1, first->text() is 'unsigned', [TYPE/NONE] <===>
   second->orig_line is 14, second->orig_col is 10, second->text() 'long', [TYPE/NONE] : rule sp_after_type[ ]
 <force between 'unsigned' and 'long'>space_col_align : av is force
space_col_align :    len is 8
space_col_align :    => coldiff is 8
space_col_align :    => av is FORCE
space_col_align :    => coldiff is 9
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 14, orig_col is 10, [TYPE/NONE], text() 'long' <==>
space_col_align : second->orig_line is 14, orig_col is 15 [WORD/NONE], text() 'nTelIndex', [CallStack]
do_space : orig_line is 14, orig_col is 10, first->text() 'long', type is TYPE
log_rule(Spacing [ ]): first->orig_line is 14, first->orig_col is 10, first->text() is 'long', [TYPE/NONE] <===>
   second->orig_line is 14, second->orig_col is 15, second->text() 'nTelIndex', [WORD/NONE] : rule sp_after_type[ ]
 <force between 'long' and 'nTelIndex'>space_col_align : av is force
space_col_align :    len is 4
space_col_align :    => coldiff is 4
space_col_align :    => av is FORCE
space_col_align :    => coldiff is 5
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 14, orig_col is 15, [WORD/NONE], text() 'nTelIndex' <==>
space_col_align : second->orig_line is 14, orig_col is 24 [SEMICOLON/NONE], text() ';', [CallStack]
do_space : orig_line is 14, orig_col is 15, first->text() 'nTelIndex', type is WORD
log_rule(Spacing [ ]): first->orig_line is 14, first->orig_col is 15, first->text() is 'nTelIndex', [WORD/NONE] <===>
   second->orig_line is 14, second->orig_col is 24, second->text() ';', [SEMICOLON/NONE] : rule sp_before_semi[ ]
space_col_align : av is remove
space_col_align :    len is 9
space_col_align :    => coldiff is 9
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 9
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
space_col_align : first->orig_line is 14, orig_col is 24, [SEMICOLON/NONE], text() ';' <==>
space_col_align : second->orig_line is 14, orig_col is 25 [NEWLINE/NONE], text() '', [CallStack]
do_space : orig_line is 14, orig_col is 24, first->text() ';', type is SEMICOLON
space_col_align : av is remove
space_col_align :    len is 1
space_col_align :    => coldiff is 1
space_col_align :    => av is REMOVE
space_col_align :    => coldiff is 1
log_rule(Newline): rule is 'indent_relative_single_line_comments' at line 348
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_continue' at line 2945
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'mod_add_long_switch_closebrace_comment' at line 2113
log_rule(Newline): rule is 'mod_add_long_function_closebrace_comment' at line 2114
log_rule(Newline): rule is 'mod_add_long_class_closebrace_comment' at line 2115
log_rule(Newline): rule is 'mod_add_long_namespace_closebrace_comment' at line 2116
log_rule(Newline): rule is 'mod_add_long_ifdef_else_comment' at line 2126
log_rule(Newline): rule is 'mod_add_long_ifdef_endif_comment' at line 2127
log_rule(Newline): rule is 'align_typedef_span' at line 120
log_rule(Newline): rule is 'align_left_shift' at line 126
log_rule(Newline): rule is 'align_oc_msg_colon_span' at line 132
log_rule(Newline): rule is 'align_var_def_span' at line 139
log_rule(Newline): rule is 'align_var_struct_span' at line 140
log_rule(Newline): rule is 'align_var_class_span' at line 141
log_rule(Newline): rule is 'align_enum_equ_span' at line 150
log_rule(Newline): rule is 'align_assign_span' at line 151
log_rule(Newline): rule is 'align_struct_init_span' at line 162
log_rule(Newline): rule is 'align_func_proto_span' at line 169
log_rule(Newline): rule is 'align_mix_var_proto' at line 170
log_rule(Newline): rule is 'align_oc_msg_spec_span' at line 178
log_rule(Newline): rule is 'align_oc_decl_colon' at line 185
log_rule(Newline): rule is 'align_asm_colon' at line 191
log_rule(Newline): rule is 'align_func_params' at line 198
log_rule(Newline): rule is 'align_func_params_span' at line 199
log_rule(Newline): rule is 'align_same_func_call_params' at line 206
log_rule(Newline): rule is 'indent_columns' at line 572
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_macro_brace' at line 1453
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_paren_nl' at line 2360
log_rule(Newline): rule is 'indent_paren_nl' at line 2361
log_rule(Newline): rule is 'indent_square_nl' at line 2362
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2369
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2370
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2371
log_rule(Newline): rule is 'use_indent_continue_only_once' at line 2445
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2446
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2447
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2448
log_rule(Newline): rule is 'indent_continue' at line 2468
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_class_colon' at line 2120
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_paren_nl' at line 2360
log_rule(Newline): rule is 'indent_paren_nl' at line 2361
log_rule(Newline): rule is 'indent_square_nl' at line 2362
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2369
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2370
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2371
log_rule(Newline): rule is 'use_indent_continue_only_once' at line 2445
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2446
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2447
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2448
log_rule(Newline): rule is 'indent_continue' at line 2468
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_paren_nl' at line 2360
log_rule(Newline): rule is 'indent_paren_nl' at line 2361
log_rule(Newline): rule is 'indent_square_nl' at line 2362
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2369
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2370
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2371
log_rule(Newline): rule is 'use_indent_continue_only_once' at line 2445
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2446
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2447
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2448
log_rule(Newline): rule is 'indent_continue' at line 2468
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_macro_brace' at line 1453
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_paren_nl' at line 2360
log_rule(Newline): rule is 'indent_paren_nl' at line 2361
log_rule(Newline): rule is 'indent_square_nl' at line 2362
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2369
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2370
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2371
log_rule(Newline): rule is 'use_indent_continue_only_once' at line 2445
log_rule(Newline): rule is 'indent_paren_after_func_decl' at line 2446
log_rule(Newline): rule is 'indent_paren_after_func_def' at line 2447
log_rule(Newline): rule is 'indent_paren_after_func_call' at line 2448
log_rule(Newline): rule is 'indent_continue' at line 2468
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_macro_brace' at line 1453
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_continue' at line 2945
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_continue' at line 2945
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'indent_col1_multi_string_literal' at line 590
log_rule(Newline): rule is 'use_options_overriding_for_qt_macros' at line 623
log_rule(Newline): rule is 'indent_brace_parent' at line 633
log_rule(Newline): rule is 'indent_func_def_force_col1' at line 638
log_rule(Newline): rule is 'indent_xml_string' at line 943
log_rule(Newline): rule is 'indent_access_spec_body' at line 1154
log_rule(Newline): rule is 'indent_single_newlines' at line 1246
log_rule(Newline): rule is 'indent_braces' at line 1313
log_rule(Newline): rule is 'indent_braces_no_func' at line 1314
log_rule(Newline): rule is 'indent_braces_no_func' at line 1315
log_rule(Newline): rule is 'indent_braces_no_class' at line 1316
log_rule(Newline): rule is 'indent_braces_no_struct' at line 1317
log_rule(Newline): rule is 'indent_shift' at line 2815
log_rule(Newline): rule is 'indent_xml_string' at line 3469
log_rule(Newline): rule is 'indent_continue_class_head' at line 3486
log_rule(Newline): rule is 'code_width' at line 2143
log_rule(Newline): rule is 'align_nl_cont' at line 2164
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'output_tab_size' at line 57
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'indent_with_tabs' at line 679
log_rule(Newline): rule is 'indent_with_tabs' at line 710
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
log_rule(Newline): rule is 'align_with_tabs' at line 732
log_rule(Newline): rule is 'align_keep_tabs' at line 737
log_rule(Newline): rule is 'cmt_convert_tab_to_spaces' at line 530
