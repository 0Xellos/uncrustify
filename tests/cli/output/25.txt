Newline loop start: 0
log_rule(newlines_cleanup_braces:4430): rule is 'nl_struct_brace'
log_rule(newlines_struct_union:1662): rule is 'nl_define_macro'
log_rule(newlines_cleanup_braces:3949): rule is 'nl_ds_struct_enum_cmt'
log_rule(newlines_cleanup_braces:4059): rule is 'nl_brace_brace'
log_rule(newlines_cleanup_braces:4139): rule is 'nl_type_brace_init_lst_open'
log_rule(newlines_cleanup_braces:4140): rule is 'nl_type_brace_init_lst_close'
log_rule(newlines_brace_pair:2211): rule is 'nl_define_macro'
log_rule(newlines_brace_pair:2247): rule is 'nl_create_func_def_one_liner'
log_rule(collapse_empty_body:2181): rule is 'nl_collapse_empty_body'
log_rule(newlines_brace_pair:2486): rule is 'eat_blanks_after_open_brace'
log_rule(newline_def_blk:2158): rule is 'nl_var_def_blk_end'
log_rule(newline_def_blk:2158): rule is 'nl_var_def_blk_end'
log_rule(newline_def_blk:2097): rule is 'nl_var_def_blk_start'
log_rule(newline_def_blk:2097): rule is 'nl_var_def_blk_start'
newline_add_between : start->text() is ';', type is SEMICOLON, orig_line is 14, orig_col is 24
newline_add_between : and end->text() is '}', orig_line is 15, orig_col is 1
   [CallStack]
log_rule(newlines_cleanup_braces:4562): rule is 'nl_func_decl_start'
log_rule(newlines_cleanup_braces:4563): rule is 'nl_func_def_start'
log_rule(newlines_cleanup_braces:4564): rule is 'nl_func_decl_start_single'
log_rule(newlines_cleanup_braces:4565): rule is 'nl_func_def_start_single'
log_rule(newlines_cleanup_braces:4566): rule is 'nl_func_decl_start_multi_line'
log_rule(newlines_cleanup_braces:4567): rule is 'nl_func_def_start_multi_line'
log_rule(newlines_cleanup_braces:4568): rule is 'nl_func_decl_args'
log_rule(newlines_cleanup_braces:4569): rule is 'nl_func_def_args'
log_rule(newlines_cleanup_braces:4570): rule is 'nl_func_decl_args_multi_line'
log_rule(newlines_cleanup_braces:4571): rule is 'nl_func_def_args_multi_line'
log_rule(newlines_cleanup_braces:4572): rule is 'nl_func_decl_end'
log_rule(newlines_cleanup_braces:4573): rule is 'nl_func_def_end'
log_rule(newlines_cleanup_braces:4574): rule is 'nl_func_decl_end_single'
log_rule(newlines_cleanup_braces:4575): rule is 'nl_func_def_end_single'
log_rule(newlines_cleanup_braces:4576): rule is 'nl_func_decl_end_multi_line'
log_rule(newlines_cleanup_braces:4577): rule is 'nl_func_def_end_multi_line'
log_rule(newlines_cleanup_braces:4578): rule is 'nl_func_decl_empty'
log_rule(newlines_cleanup_braces:4579): rule is 'nl_func_def_empty'
log_rule(newlines_cleanup_braces:4580): rule is 'nl_func_type_name'
log_rule(newlines_cleanup_braces:4581): rule is 'nl_func_type_name_class'
log_rule(newlines_cleanup_braces:4582): rule is 'nl_func_class_scope'
log_rule(newlines_cleanup_braces:4583): rule is 'nl_func_scope_name'
log_rule(newlines_cleanup_braces:4584): rule is 'nl_func_proto_type_name'
log_rule(newlines_cleanup_braces:4585): rule is 'nl_func_paren'
log_rule(newlines_cleanup_braces:4586): rule is 'nl_func_def_paren'
log_rule(newlines_cleanup_braces:4587): rule is 'nl_func_def_paren_empty'
log_rule(newlines_cleanup_braces:4588): rule is 'nl_func_paren_empty'
log_rule(newlines_cleanup_braces:4589): rule is 'nl_func_call_args'
log_rule(newlines_cleanup_braces:4562): rule is 'nl_func_decl_start'
log_rule(newlines_cleanup_braces:4563): rule is 'nl_func_def_start'
log_rule(newlines_cleanup_braces:4564): rule is 'nl_func_decl_start_single'
log_rule(newlines_cleanup_braces:4565): rule is 'nl_func_def_start_single'
log_rule(newlines_cleanup_braces:4566): rule is 'nl_func_decl_start_multi_line'
log_rule(newlines_cleanup_braces:4567): rule is 'nl_func_def_start_multi_line'
log_rule(newlines_cleanup_braces:4568): rule is 'nl_func_decl_args'
log_rule(newlines_cleanup_braces:4569): rule is 'nl_func_def_args'
log_rule(newlines_cleanup_braces:4570): rule is 'nl_func_decl_args_multi_line'
log_rule(newlines_cleanup_braces:4571): rule is 'nl_func_def_args_multi_line'
log_rule(newlines_cleanup_braces:4572): rule is 'nl_func_decl_end'
log_rule(newlines_cleanup_braces:4573): rule is 'nl_func_def_end'
log_rule(newlines_cleanup_braces:4574): rule is 'nl_func_decl_end_single'
log_rule(newlines_cleanup_braces:4575): rule is 'nl_func_def_end_single'
log_rule(newlines_cleanup_braces:4576): rule is 'nl_func_decl_end_multi_line'
log_rule(newlines_cleanup_braces:4577): rule is 'nl_func_def_end_multi_line'
log_rule(newlines_cleanup_braces:4578): rule is 'nl_func_decl_empty'
log_rule(newlines_cleanup_braces:4579): rule is 'nl_func_def_empty'
log_rule(newlines_cleanup_braces:4580): rule is 'nl_func_type_name'
log_rule(newlines_cleanup_braces:4581): rule is 'nl_func_type_name_class'
log_rule(newlines_cleanup_braces:4582): rule is 'nl_func_class_scope'
log_rule(newlines_cleanup_braces:4583): rule is 'nl_func_scope_name'
log_rule(newlines_cleanup_braces:4584): rule is 'nl_func_proto_type_name'
log_rule(newlines_cleanup_braces:4585): rule is 'nl_func_paren'
log_rule(newlines_cleanup_braces:4586): rule is 'nl_func_def_paren'
log_rule(newlines_cleanup_braces:4587): rule is 'nl_func_def_paren_empty'
log_rule(newlines_cleanup_braces:4588): rule is 'nl_func_paren_empty'
log_rule(newlines_cleanup_braces:4589): rule is 'nl_func_call_args'
log_rule(newlines_cleanup_braces:4562): rule is 'nl_func_decl_start'
log_rule(newlines_cleanup_braces:4563): rule is 'nl_func_def_start'
log_rule(newlines_cleanup_braces:4564): rule is 'nl_func_decl_start_single'
log_rule(newlines_cleanup_braces:4565): rule is 'nl_func_def_start_single'
log_rule(newlines_cleanup_braces:4566): rule is 'nl_func_decl_start_multi_line'
log_rule(newlines_cleanup_braces:4567): rule is 'nl_func_def_start_multi_line'
log_rule(newlines_cleanup_braces:4568): rule is 'nl_func_decl_args'
log_rule(newlines_cleanup_braces:4569): rule is 'nl_func_def_args'
log_rule(newlines_cleanup_braces:4570): rule is 'nl_func_decl_args_multi_line'
log_rule(newlines_cleanup_braces:4571): rule is 'nl_func_def_args_multi_line'
log_rule(newlines_cleanup_braces:4572): rule is 'nl_func_decl_end'
log_rule(newlines_cleanup_braces:4573): rule is 'nl_func_def_end'
log_rule(newlines_cleanup_braces:4574): rule is 'nl_func_decl_end_single'
log_rule(newlines_cleanup_braces:4575): rule is 'nl_func_def_end_single'
log_rule(newlines_cleanup_braces:4576): rule is 'nl_func_decl_end_multi_line'
log_rule(newlines_cleanup_braces:4577): rule is 'nl_func_def_end_multi_line'
log_rule(newlines_cleanup_braces:4578): rule is 'nl_func_decl_empty'
log_rule(newlines_cleanup_braces:4579): rule is 'nl_func_def_empty'
log_rule(newlines_cleanup_braces:4580): rule is 'nl_func_type_name'
log_rule(newlines_cleanup_braces:4581): rule is 'nl_func_type_name_class'
log_rule(newlines_cleanup_braces:4582): rule is 'nl_func_class_scope'
log_rule(newlines_cleanup_braces:4583): rule is 'nl_func_scope_name'
log_rule(newlines_cleanup_braces:4584): rule is 'nl_func_proto_type_name'
log_rule(newlines_cleanup_braces:4585): rule is 'nl_func_paren'
log_rule(newlines_cleanup_braces:4586): rule is 'nl_func_def_paren'
log_rule(newlines_cleanup_braces:4587): rule is 'nl_func_def_paren_empty'
log_rule(newlines_cleanup_braces:4588): rule is 'nl_func_paren_empty'
log_rule(newlines_cleanup_braces:4589): rule is 'nl_func_call_args'
log_rule(newlines_cleanup_braces:4044): rule is 'nl_before_opening_brace_func_class_def'
log_rule(newlines_cleanup_braces:4059): rule is 'nl_brace_brace'
log_rule(newlines_cleanup_braces:4139): rule is 'nl_type_brace_init_lst_open'
log_rule(newlines_cleanup_braces:4140): rule is 'nl_type_brace_init_lst_close'
log_rule(newlines_brace_pair:2211): rule is 'nl_define_macro'
log_rule(newlines_brace_pair:2247): rule is 'nl_create_func_def_one_liner'
log_rule(newlines_brace_pair:2417): rule is 'nl_fdef_brace_cond'
log_rule(newlines_brace_pair:2432): rule is 'nl_fdef_brace'
log_rule(collapse_empty_body:2181): rule is 'nl_collapse_empty_body'
log_rule(newlines_brace_pair:2486): rule is 'eat_blanks_after_open_brace'
newline_add_between : start->text() is '{', type is BRACE_OPEN, orig_line is 6, orig_col is 1
newline_add_between : and end->text() is '}', orig_line is 7, orig_col is 1
   [CallStack]
newline_add_between : start->text() is '{', type is BRACE_OPEN, orig_line is 6, orig_col is 1
newline_add_between : and end->text() is '}', orig_line is 7, orig_col is 1
   [CallStack]
log_rule(newlines_cleanup_braces:4152): rule is 'nl_brace_brace'
log_rule(newlines_cleanup_braces:4164): rule is 'nl_brace_square'
log_rule(newlines_cleanup_braces:4176): rule is 'nl_brace_fparen'
log_rule(newlines_cleanup_braces:4197): rule is 'nl_type_brace_init_lst_close'
log_rule(newlines_cleanup_braces:4207): rule is 'eat_blanks_before_close_brace'
log_rule(newlines_cleanup_braces:4264): rule is 'nl_brace_struct_var'
log_rule(newlines_cleanup_braces:4287): rule is 'nl_after_brace_close'
log_rule(newlines_cleanup_braces:4562): rule is 'nl_func_decl_start'
log_rule(newlines_cleanup_braces:4563): rule is 'nl_func_def_start'
log_rule(newlines_cleanup_braces:4564): rule is 'nl_func_decl_start_single'
log_rule(newlines_cleanup_braces:4565): rule is 'nl_func_def_start_single'
log_rule(newlines_cleanup_braces:4566): rule is 'nl_func_decl_start_multi_line'
log_rule(newlines_cleanup_braces:4567): rule is 'nl_func_def_start_multi_line'
log_rule(newlines_cleanup_braces:4568): rule is 'nl_func_decl_args'
log_rule(newlines_cleanup_braces:4569): rule is 'nl_func_def_args'
log_rule(newlines_cleanup_braces:4570): rule is 'nl_func_decl_args_multi_line'
log_rule(newlines_cleanup_braces:4571): rule is 'nl_func_def_args_multi_line'
log_rule(newlines_cleanup_braces:4572): rule is 'nl_func_decl_end'
log_rule(newlines_cleanup_braces:4573): rule is 'nl_func_def_end'
log_rule(newlines_cleanup_braces:4574): rule is 'nl_func_decl_end_single'
log_rule(newlines_cleanup_braces:4575): rule is 'nl_func_def_end_single'
log_rule(newlines_cleanup_braces:4576): rule is 'nl_func_decl_end_multi_line'
log_rule(newlines_cleanup_braces:4577): rule is 'nl_func_def_end_multi_line'
log_rule(newlines_cleanup_braces:4578): rule is 'nl_func_decl_empty'
log_rule(newlines_cleanup_braces:4579): rule is 'nl_func_def_empty'
log_rule(newlines_cleanup_braces:4580): rule is 'nl_func_type_name'
log_rule(newlines_cleanup_braces:4581): rule is 'nl_func_type_name_class'
log_rule(newlines_cleanup_braces:4582): rule is 'nl_func_class_scope'
log_rule(newlines_cleanup_braces:4583): rule is 'nl_func_scope_name'
log_rule(newlines_cleanup_braces:4584): rule is 'nl_func_proto_type_name'
log_rule(newlines_cleanup_braces:4585): rule is 'nl_func_paren'
log_rule(newlines_cleanup_braces:4586): rule is 'nl_func_def_paren'
log_rule(newlines_cleanup_braces:4587): rule is 'nl_func_def_paren_empty'
log_rule(newlines_cleanup_braces:4588): rule is 'nl_func_paren_empty'
log_rule(newlines_cleanup_braces:4589): rule is 'nl_func_call_args'
log_rule(newlines_cleanup_braces:4044): rule is 'nl_before_opening_brace_func_class_def'
log_rule(newlines_cleanup_braces:4059): rule is 'nl_brace_brace'
log_rule(newlines_cleanup_braces:4139): rule is 'nl_type_brace_init_lst_open'
log_rule(newlines_cleanup_braces:4140): rule is 'nl_type_brace_init_lst_close'
log_rule(newlines_brace_pair:2211): rule is 'nl_define_macro'
log_rule(newlines_brace_pair:2247): rule is 'nl_create_func_def_one_liner'
log_rule(newlines_brace_pair:2417): rule is 'nl_fdef_brace_cond'
log_rule(newlines_brace_pair:2432): rule is 'nl_fdef_brace'
log_rule(collapse_empty_body:2181): rule is 'nl_collapse_empty_body'
log_rule(newlines_brace_pair:2486): rule is 'eat_blanks_after_open_brace'
newline_add_between : start->text() is '{', type is BRACE_OPEN, orig_line is 10, orig_col is 1
newline_add_between : and end->text() is '}', orig_line is 11, orig_col is 1
   [CallStack]
newline_add_between : start->text() is '{', type is BRACE_OPEN, orig_line is 10, orig_col is 1
newline_add_between : and end->text() is '}', orig_line is 11, orig_col is 1
   [CallStack]
log_rule(newlines_cleanup_braces:4152): rule is 'nl_brace_brace'
log_rule(newlines_cleanup_braces:4164): rule is 'nl_brace_square'
log_rule(newlines_cleanup_braces:4176): rule is 'nl_brace_fparen'
log_rule(newlines_cleanup_braces:4197): rule is 'nl_type_brace_init_lst_close'
log_rule(newlines_cleanup_braces:4207): rule is 'eat_blanks_before_close_brace'
log_rule(newlines_cleanup_braces:4264): rule is 'nl_brace_struct_var'
log_rule(newlines_cleanup_braces:4287): rule is 'nl_after_brace_close'
log_rule(newlines_cleanup_braces:4522): rule is 'nl_after_semicolon'
log_rule(newlines_cleanup_braces:4522): rule is 'nl_after_semicolon'
log_rule(newlines_cleanup_braces:4152): rule is 'nl_brace_brace'
log_rule(newlines_cleanup_braces:4164): rule is 'nl_brace_square'
log_rule(newlines_cleanup_braces:4176): rule is 'nl_brace_fparen'
log_rule(newlines_cleanup_braces:4197): rule is 'nl_type_brace_init_lst_close'
log_rule(newlines_cleanup_braces:4207): rule is 'eat_blanks_before_close_brace'
log_rule(newlines_cleanup_braces:4264): rule is 'nl_brace_struct_var'
log_rule(newlines_cleanup_braces:4522): rule is 'nl_after_semicolon'
log_rule(newline_def_blk:2158): rule is 'nl_var_def_blk_end'
log_rule(newline_def_blk:2158): rule is 'nl_var_def_blk_end'
log_rule(newline_def_blk:2097): rule is 'nl_var_def_blk_start'
log_rule(newline_def_blk:2097): rule is 'nl_var_def_blk_start'
log_rule(newlines_func_pre_blank_lines:1240): rule is 'nl_before_func_class_def'
log_rule(newlines_func_pre_blank_lines:1241): rule is 'nl_before_func_class_proto'
log_rule(newlines_func_pre_blank_lines:1242): rule is 'nl_before_func_body_def'
log_rule(newlines_func_pre_blank_lines:1243): rule is 'nl_before_func_body_proto'
log_rule(newlines_func_pre_blank_lines:1240): rule is 'nl_before_func_class_def'
log_rule(newlines_func_pre_blank_lines:1241): rule is 'nl_before_func_class_proto'
log_rule(newlines_func_pre_blank_lines:1242): rule is 'nl_before_func_body_def'
log_rule(newlines_func_pre_blank_lines:1243): rule is 'nl_before_func_body_proto'
log_rule(newlines_class_colon_pos:5579): rule is 'pos_class_colon'
log_rule(newlines_class_colon_pos:5581): rule is 'nl_class_colon'
log_rule(newlines_class_colon_pos:5583): rule is 'nl_class_init_args'
log_rule(newlines_class_colon_pos:5585): rule is 'pos_class_comma'
log_rule(newlines_class_colon_pos:5601): rule is 'align_constr_value_span'
log_rule(newlines_class_colon_pos:5590): rule is 'pos_constr_colon'
log_rule(newlines_class_colon_pos:5592): rule is 'nl_constr_colon'
log_rule(newlines_class_colon_pos:5594): rule is 'nl_constr_init_args'
log_rule(newlines_class_colon_pos:5596): rule is 'pos_constr_comma'
log_rule(newlines_class_colon_pos:5601): rule is 'align_constr_value_span'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(can_increase_nl:442): rule is 'nl_start_of_file'
log_rule(can_increase_nl:450): rule is 'nl_end_of_file'
log_rule(do_blank_lines:6208): rule is 'nl_after_class'
log_rule(do_blank_lines:6209): rule is 'nl_after_struct'
log_rule(newlines_functions_remove_extra_blank_lines:5073): rule is 'nl_max_blank_in_func'
newlines_functions_remove_extra_blank_lines : nl_max_blank_in_func is zero
